import React, { useState, useEffect } from 'react';
import ReviewService from '../../services/reviewService';
import useReviews from '../../hooks/useReviews';
import './ProgressWidget.css';

const ProgressWidget = ({ onReviewAdded }) => {
  const { reviews, loading: reviewsLoading } = useReviews();
  const [stats, setStats] = useState({ reviewCount: 0, level: 1, progress: 0 });
  
  useEffect(() => {
    if (reviews.length > 0) {
      const { level, progress, reviewsForNextLevel } = ReviewService.calculateLevelProgress(reviews.length);
      setStats({
        reviewCount: reviews.length,
        level,
        progress,
        reviewsForNextLevel
      });
    }
  }, [reviews]);
  
  if (reviewsLoading) {
    return (
      <div className="progress-widget">
        <div className="progress-info">
          <span className="level-badge">üìç –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</span>
        </div>
      </div>
    );
  }
  
  return (
    <div className="progress-widget">
      <div className="progress-info">
        <span className="level-badge">
          üìç –†—ñ–≤–µ–Ω—å {stats.level}
        </span>
        <span className="points-badge">
          {stats.reviewCount} –≤—ñ–¥–≥—É–∫—ñ–≤
        </span>
      </div>
      <div className="progress-bar-mini">
        <div 
          className="progress-fill-mini"
          style={{ width: `${stats.progress}%` }}
        />
      </div>
      <div className="progress-text">
        {stats.level < 10 && stats.reviewsForNextLevel > 0 
          ? `–©–µ ${stats.reviewsForNextLevel} –≤—ñ–¥–≥—É–∫—ñ–≤ –¥–æ ${stats.level + 1} —Ä—ñ–≤–Ω—è` 
          : stats.level === 10 
            ? '–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä—ñ–≤–µ–Ω—å!' 
            : `${Math.round(stats.progress)}% –¥–æ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ —Ä—ñ–≤–Ω—è`}
      </div>
    </div>
  );
};

export default ProgressWidget;