import React, { useState } from 'react';
import './FeatureShowcase.css';

const FeatureShowcase = ({ isOpen, onClose }) => {
  const [activeFeature, setActiveFeature] = useState(0);

  const features = [
    {
      id: 'voice',
      title: 'üé§ –ì–æ–ª–æ—Å–æ–≤—ñ –≤—ñ–¥–≥—É–∫–∏',
      description: '–ó–∞–ª–∏—à–∞–π—Ç–µ –≤—ñ–¥–≥—É–∫–∏ –≥–æ–ª–æ—Å–æ–º –∑ AI-–∞–Ω–∞–ª—ñ–∑–æ–º —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ',
      benefits: [
        '–†–æ–∑–ø—ñ–∑–Ω–∞–≤–∞–Ω–Ω—è –º–æ–≤–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ',
        '–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∞ –æ—Ü—ñ–Ω–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤—ñ —Ç–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—ñ',
        '–ê—É–¥—ñ–æ-–≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥ —á–∞—Å –∑–∞–ø–∏—Å—É',
        '–í–∏–¥—ñ–ª–µ–Ω–Ω—è –∫–ª—é—á–æ–≤–∏—Ö —Å–ª—ñ–≤'
      ],
      demo: 'üéôÔ∏è "–ß—É–¥–æ–≤–µ –∫–∞—Ñ–µ –∑ –Ω–µ–π–º–æ–≤—ñ—Ä–Ω–æ—é –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ—é!" ‚Üí ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê'
    },
    {
      id: 'ar',
      title: 'üì± AR-–∫–∞–º–µ—Ä–∞',
      description: '–î–∏–≤—ñ—Ç—å—Å—è –Ω–∞ —Å–≤—ñ—Ç —á–µ—Ä–µ–∑ –¥–æ–ø–æ–≤–Ω–µ–Ω—É —Ä–µ–∞–ª—å–Ω—ñ—Å—Ç—å',
      benefits: [
        'AR-–º–∞—Ä–∫–µ—Ä–∏ –¥–ª—è –º—ñ—Å—Ü—å –ø–æ–±–ª–∏–∑—É',
        '–ö–æ–º–ø–∞—Å —Ç–∞ –æ—Ä—ñ—î–Ω—Ç–∞—Ü—ñ—è –ø—Ä–∏—Å—Ç—Ä–æ—é',
        'AR-—Ñ–æ—Ç–æ –∑ –≥–µ–æ–ª–æ–∫–∞—Ü—ñ–π–Ω–∏–º–∏ –º—ñ—Ç–∫–∞–º–∏',
        '–í—ñ–¥—Å—Ç–∞–Ω—å –¥–æ –æ–±\'—î–∫—Ç—ñ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º—É —á–∞—Å—ñ'
      ],
      demo: 'üìç –ö–∞—Ñ–µ "–õ—å–≤—ñ–≤—Å—å–∫–∞ –∫–∞–≤–∞" - 150–º ‚Üí üì∏ AR-—Ñ–æ—Ç–æ'
    },
    {
      id: 'filters',
      title: 'üéØ –†–æ–∑—É–º–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏',
      description: 'AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –Ω–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ—é —Ç–∞ —á–∞—Å—É',
      benefits: [
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó',
        '–§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –∑–∞ –Ω–∞—Å—Ç—Ä–æ—î–º',
        '–ì–µ–æ–ª–æ–∫–∞—Ü—ñ–π–Ω—ñ —Ñ—ñ–ª—å—Ç—Ä–∏',
        '–§—ñ–ª—å—Ç—Ä–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ'
      ],
      demo: 'üåÖ –†–∞–Ω–æ–∫ + ‚òï –ù–∞—Å—Ç—Ä—ñ–π ‚Üí –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó: –ö–∞—Ñ–µ, –ü–µ–∫–∞—Ä–Ω—è'
    },
    {
      id: 'gamification',
      title: 'üèÜ –ì–µ–π–º—ñ—Ñ—ñ–∫–∞—Ü—ñ—è',
      description: '–ó–±–∏—Ä–∞–π—Ç–µ –±–µ–π–¥–∂—ñ, –ø—ñ–¥–≤–∏—â—É–π—Ç–µ —Ä—ñ–≤–µ–Ω—å, –∑–º–∞–≥–∞–π—Ç–µ—Å—å –∑ –¥—Ä—É–∑—è–º–∏',
      benefits: [
        '15+ —É–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö –±–µ–π–¥–∂—ñ–≤',
        '6 —Ä—ñ–≤–Ω—ñ–≤ –ø—Ä–æ–≥—Ä–µ—Å—É',
        '–©–æ–¥–µ–Ω–Ω—ñ —Å–µ—Ä—ñ—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ',
        '–†–µ–π—Ç–∏–Ω–≥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤'
      ],
      demo: 'üìù 10 –≤—ñ–¥–≥—É–∫—ñ–≤ ‚Üí üèÜ –ë–µ–π–¥–∂ "–†–µ—Ü–µ–Ω–∑–µ–Ω—Ç" + 50 –±–∞–ª—ñ–≤'
    },
    {
      id: 'social',
      title: 'üì± –°–æ—Ü—ñ–∞–ª—å–Ω–∞ —Å—Ç—Ä—ñ—á–∫–∞',
      description: '–°–ª—ñ–¥–∫—É–π—Ç–µ –∑–∞ –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—é –¥—Ä—É–∑—ñ–≤ —Ç–∞ –¥—ñ–ª—ñ—Ç—å—Å—è –¥–æ—Å–≤—ñ–¥–æ–º',
      benefits: [
        '–°—Ç—Ä—ñ—á–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –¥—Ä—É–∑—ñ–≤',
        '–õ–∞–π–∫–∏ —Ç–∞ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ',
        '–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –≤—ñ–¥–≥—É–∫–∞–º–∏',
        '–ì—Ä—É–ø–æ–≤—ñ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ'
      ],
      demo: 'üë• –û–ª–µ–Ω–∞ –∑–∞–ª–∏—à–∏–ª–∞ –≤—ñ–¥–≥—É–∫ ‚Üí üí¨ –ö–æ–º–µ–Ω—Ç—É–≤–∞—Ç–∏ ‚Üí ‚ù§Ô∏è –õ–∞–π–∫'
    },
    {
      id: 'analytics',
      title: 'üìä –ê–Ω–∞–ª—ñ—Ç–∏–∫–∞',
      description: '–î—ñ–∑–Ω–∞–≤–∞–π—Ç–µ—Å—å –±—ñ–ª—å—à–µ –ø—Ä–æ —Å–≤–æ—ó —É–ø–æ–¥–æ–±–∞–Ω–Ω—è —Ç–∞ –∑–≤–∏—á–∫–∏',
      benefits: [
        '–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ñ —ñ–Ω—Å–∞–π—Ç–∏',
        '–ü–∞—Ç–µ—Ä–Ω–∏ –ø–æ–≤–µ–¥—ñ–Ω–∫–∏',
        '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ',
        '–ï–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–∏—Ö'
      ],
      demo: 'üìà 25 –º—ñ—Å—Ü—å ‚Üí ‚ù§Ô∏è –£–ª—é–±–ª–µ–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è: –ö–∞—Ñ–µ ‚Üí üïê –ê–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å: 14:00'
    }
  ];

  if (!isOpen) return null;

  return (
    <div className="showcase-overlay">
      <div className="showcase-container">
        <div className="showcase-header">
          <h2>‚ú® –Ü–Ω–Ω–æ–≤–∞—Ü—ñ–π–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó MapMark</h2>
          <button className="showcase-close" onClick={onClose}>‚úï</button>
        </div>

        <div className="showcase-content">
          <div className="features-nav">
            {features.map((feature, index) => (
              <button
                key={feature.id}
                className={`feature-nav-btn ${activeFeature === index ? 'active' : ''}`}
                onClick={() => setActiveFeature(index)}
              >
                <div className="nav-icon">{feature.title.split(' ')[0]}</div>
                <div className="nav-title">{feature.title.split(' ').slice(1).join(' ')}</div>
              </button>
            ))}
          </div>

          <div className="feature-details">
            <div className="feature-main">
              <h3>{features[activeFeature].title}</h3>
              <p className="feature-description">
                {features[activeFeature].description}
              </p>

              <div className="feature-demo">
                <h4>üí° –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:</h4>
                <div className="demo-text">
                  {features[activeFeature].demo}
                </div>
              </div>

              <div className="feature-benefits">
                <h4>üöÄ –ü–µ—Ä–µ–≤–∞–≥–∏:</h4>
                <ul>
                  {features[activeFeature].benefits.map((benefit, index) => (
                    <li key={index}>{benefit}</li>
                  ))}
                </ul>
              </div>
            </div>

            <div className="feature-visual">
              <div className="visual-placeholder">
                <div className="visual-icon">
                  {features[activeFeature].title.split(' ')[0]}
                </div>
                <div className="visual-text">
                  {features[activeFeature].title}
                </div>
              </div>
            </div>
          </div>
        </div>

        <div className="showcase-footer">
          <div className="progress-indicator">
            {features.map((_, index) => (
              <div
                key={index}
                className={`progress-dot ${activeFeature === index ? 'active' : ''}`}
                onClick={() => setActiveFeature(index)}
              />
            ))}
          </div>

          <div className="showcase-actions">
            <button
              className="nav-btn prev-btn"
              onClick={() => setActiveFeature(Math.max(0, activeFeature - 1))}
              disabled={activeFeature === 0}
            >
              ‚Üê –ü–æ–ø–µ—Ä–µ–¥–Ω—è
            </button>
            
            <button className="try-btn">
              –°–ø—Ä–æ–±—É–≤–∞—Ç–∏ –∑–∞—Ä–∞–∑
            </button>
            
            <button
              className="nav-btn next-btn"
              onClick={() => setActiveFeature(Math.min(features.length - 1, activeFeature + 1))}
              disabled={activeFeature === features.length - 1}
            >
              –ù–∞—Å—Ç—É–ø–Ω–∞ ‚Üí
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default FeatureShowcase;