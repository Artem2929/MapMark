import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import PhotoGallery from '../components/features/PhotoGallery';
import LocationMap from '../components/features/LocationMap';
import StarRating from '../components/ui/StarRating';
import ReviewForm from '../components/forms/ReviewForm';
import './AdDetailPage.css';

const AdDetailPage = () => {
  const { id } = useParams();
  const [ad, setAd] = useState(null);
  const [reviews, setReviews] = useState([]);
  const [showReviewForm, setShowReviewForm] = useState(false);
  const [isFavorite, setIsFavorite] = useState(false);
  const [sortBy, setSortBy] = useState('newest');

  useEffect(() => {
    loadAdData();
  }, [id]);

  const loadAdData = () => {
    // Mock data - –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ API –≤–∏–∫–ª–∏–∫
    setAd({
      id: id,
      title: "–ó–∞—Ç–∏—à–Ω–µ –∫–∞—Ñ–µ –≤ —Ü–µ–Ω—Ç—Ä—ñ –º—ñ—Å—Ç–∞",
      description: "–ß—É–¥–æ–≤–µ –º—ñ—Å—Ü–µ –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Ç–∞ –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É –∑ —Å–º–∞—á–Ω–æ—é –∫–∞–≤–æ—é —Ç–∞ –¥–æ–º–∞—à–Ω—å–æ—é –≤–∏–ø—ñ—á–∫–æ—é",
      photos: [
        "/images/cafe1.jpg",
        "/images/cafe2.jpg", 
        "/images/cafe3.jpg"
      ],
      location: {
        lat: 50.4501,
        lng: 30.5234,
        address: "–≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 22, –ö–∏—ó–≤"
      },
      rating: 4.5,
      categoryRatings: {
        price: 4.2,
        cleanliness: 4.8,
        atmosphere: 4.6,
        service: 4.3
      },
      tags: ["–§—Ä—ñ–ª–∞–Ω—Å", "Wi-Fi", "–í–µ–≥–∞–Ω-—Ñ—Ä–µ–Ω–¥–ª—ñ", "–†–æ–º–∞–Ω—Ç–∏–∫–∞"],
      workingHours: "08:00 - 22:00",
      amenities: ["Wi-Fi", "–¢—É–∞–ª–µ—Ç", "–ü–∞—Ä–∫—ñ–Ω–≥", "–í–µ–≥–∞–Ω –º–µ–Ω—é"],
      views: 1247,
      likes: 89,
      publishedAt: "2024-01-15T10:30:00Z",
      author: "–ú–∞—Ä—ñ—è –ö.",
      verified: true
    });

    setReviews([
      {
        id: 1,
        author: "–û–ª–µ–∫—Å—ñ–π",
        rating: 5,
        text: "–ß—É–¥–æ–≤–µ –º—ñ—Å—Ü–µ! –°–º–∞—á–Ω–∞ –∫–∞–≤–∞ —Ç–∞ –∑–∞—Ç–∏—à–Ω–∞ –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞.",
        date: "2024-01-20T14:30:00Z",
        likes: 12,
        verified: true
      }
    ]);
  };

  const handleAddReview = (reviewData) => {
    const newReview = {
      id: Date.now(),
      ...reviewData,
      date: new Date().toISOString(),
      likes: 0
    };
    setReviews([newReview, ...reviews]);
    setShowReviewForm(false);
  };

  const toggleFavorite = () => {
    setIsFavorite(!isFavorite);
  };

  const shareAd = () => {
    if (navigator.share) {
      navigator.share({
        title: ad.title,
        text: ad.description,
        url: window.location.href
      });
    } else {
      navigator.clipboard.writeText(window.location.href);
      alert('–ü–æ—Å–∏–ª–∞–Ω–Ω—è —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ!');
    }
  };

  const sortedReviews = [...reviews].sort((a, b) => {
    switch (sortBy) {
      case 'newest':
        return new Date(b.date) - new Date(a.date);
      case 'rating':
        return b.rating - a.rating;
      case 'popular':
        return b.likes - a.likes;
      default:
        return 0;
    }
  });

  if (!ad) return <div className="loading">–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>;

  return (
    <div className="ad-detail-page">
      <div className="ad-header">
        <h1>{ad.title}</h1>
        <div className="ad-meta">
          <span className="publish-date">
            –û–ø—É–±–ª—ñ–∫–æ–≤–∞–Ω–æ {new Date(ad.publishedAt).toLocaleDateString()}
          </span>
          {ad.verified && <span className="verified-badge">‚úì –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ</span>}
        </div>
      </div>

      <PhotoGallery photos={ad.photos} />

      <div className="ad-content">
        <div className="main-content">
          <div className="description-section">
            <p>{ad.description}</p>
          </div>

          <div className="rating-section">
            <div className="overall-rating">
              <StarRating rating={ad.rating} size="large" />
              <span className="rating-text">{ad.rating} –∑ 5</span>
            </div>
            
            <div className="category-ratings">
              <h3>–†–µ–π—Ç–∏–Ω–≥ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—è—Ö</h3>
              {Object.entries(ad.categoryRatings).map(([category, rating]) => (
                <div key={category} className="category-rating">
                  <span className="category-name">{category}</span>
                  <StarRating rating={rating} />
                  <span className="rating-value">{rating}</span>
                </div>
              ))}
            </div>
          </div>

          <div className="tags-section">
            <h3>–¢–µ–≥–∏</h3>
            <div className="tags-list">
              {ad.tags.map(tag => (
                <span key={tag} className="tag">{tag}</span>
              ))}
            </div>
          </div>

          <div className="amenities-section">
            <h3>–©–æ —î –≤ –º—ñ—Å—Ü—ñ</h3>
            <div className="amenities-list">
              {ad.amenities.map(amenity => (
                <div key={amenity} className="amenity-item">
                  <span className="amenity-icon">‚úì</span>
                  <span>{amenity}</span>
                </div>
              ))}
            </div>
          </div>

          <div className="reviews-section">
            <div className="reviews-header">
              <h3>–í—ñ–¥–≥—É–∫–∏ ({reviews.length})</h3>
              <div className="reviews-controls">
                <select 
                  value={sortBy} 
                  onChange={(e) => setSortBy(e.target.value)}
                  className="sort-select"
                >
                  <option value="newest">–ó–∞ –Ω–æ–≤–∏–∑–Ω–æ—é</option>
                  <option value="rating">–ó–∞ —Ä–µ–π—Ç–∏–Ω–≥–æ–º</option>
                  <option value="popular">–ó–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ñ—Å—Ç—é</option>
                </select>
                <button 
                  className="add-review-btn"
                  onClick={() => setShowReviewForm(true)}
                >
                  –î–æ–¥–∞—Ç–∏ –≤—ñ–¥–≥—É–∫
                </button>
              </div>
            </div>

            {showReviewForm && (
              <ReviewForm 
                onSubmit={handleAddReview}
                onCancel={() => setShowReviewForm(false)}
              />
            )}

            <div className="reviews-list">
              {sortedReviews.map(review => (
                <div key={review.id} className="review-item">
                  <div className="review-header">
                    <span className="review-author">{review.author}</span>
                    {review.verified && <span className="verified-icon">‚úì</span>}
                    <StarRating rating={review.rating} />
                    <span className="review-date">
                      {new Date(review.date).toLocaleDateString()}
                    </span>
                  </div>
                  <p className="review-text">{review.text}</p>
                  <div className="review-actions">
                    <button className="like-btn">üëç {review.likes}</button>
                    <button className="report-btn">–ü–æ—Å–∫–∞—Ä–∂–∏—Ç–∏—Å—å</button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>

        <div className="sidebar">
          <div className="location-section">
            <h3>–†–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è</h3>
            <LocationMap 
              location={ad.location}
              showRouteButton={true}
            />
            <p className="address">{ad.location.address}</p>
          </div>

          <div className="working-hours">
            <h3>–ß–∞—Å —Ä–æ–±–æ—Ç–∏</h3>
            <p>{ad.workingHours}</p>
          </div>

          <div className="stats-section">
            <div className="stat-item">
              <span className="stat-icon">üëÅÔ∏è</span>
              <span>{ad.views} –ø–µ—Ä–µ–≥–ª—è–¥—ñ–≤</span>
            </div>
            <div className="stat-item">
              <span className="stat-icon">‚ù§Ô∏è</span>
              <span>{ad.likes} –≤–ø–æ–¥–æ–±–∞–Ω—å</span>
            </div>
          </div>

          <div className="action-buttons">
            <button 
              className={`favorite-btn ${isFavorite ? 'active' : ''}`}
              onClick={toggleFavorite}
            >
              {isFavorite ? '‚ù§Ô∏è' : 'ü§ç'} –£–ª—é–±–ª–µ–Ω–µ
            </button>
            <button className="share-btn" onClick={shareAd}>
              üì§ –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—å
            </button>
          </div>
        </div>
      </div>

      <div className="sticky-navigation">
        <button className="nav-btn route-btn">
          üó∫Ô∏è –Ø–∫ –¥—ñ—Å—Ç–∞—Ç–∏—Å—å
        </button>
        <button 
          className="nav-btn review-btn"
          onClick={() => setShowReviewForm(true)}
        >
          ‚úçÔ∏è –ó–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫
        </button>
      </div>
    </div>
  );
};

export default AdDetailPage;